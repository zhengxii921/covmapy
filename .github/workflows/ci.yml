name: CI

on:
  push:
    branches: [ main, master, develop ]
  pull_request:
    branches: [ main, master, develop ]

jobs:
  test:
    name: Test Python ${{ matrix.python-version }} on ${{ matrix.os }}
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        os: [ubuntu-latest, macos-latest, windows-latest]
        python-version: ["3.9", "3.10", "3.11", "3.12", "3.13"]

    steps:
    - uses: actions/checkout@v4

    - name: Install uv
      uses: astral-sh/setup-uv@v6
      with:
        version: "latest"

    - name: Set up Python ${{ matrix.python-version }}
      run: uv python install ${{ matrix.python-version }}

    - name: Install dependencies
      run: uv sync --dev

    - name: Run tests with tox
      run: |
        export PATH="$(uv python find ${{ matrix.python-version }} | xargs dirname):$PATH"
        uv run tox -e py$(echo ${{ matrix.python-version }} | tr -d '.')
      shell: bash

    - name: Upload coverage to Codecov
      if: matrix.python-version == '3.9' && matrix.os == 'ubuntu-latest'
      uses: codecov/codecov-action@v5
      with:
        files: ./coverage.xml
        fail_ci_if_error: false

  lint:
    name: Lint and Type Check (Python ${{ matrix.python-version }})
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        python-version: ["3.9", "3.10", "3.11", "3.12", "3.13"]
    steps:
    - uses: actions/checkout@v4

    - name: Install uv
      uses: astral-sh/setup-uv@v6
      with:
        version: "latest"

    - name: Set up Python ${{ matrix.python-version }}
      run: uv python install ${{ matrix.python-version }}

    - name: Install dependencies
      run: uv sync --dev

    - name: Run lint with tox
      run: |
        export PATH="$(uv python find ${{ matrix.python-version }} | xargs dirname):$PATH"
        uv run tox -e lint-py$(echo ${{ matrix.python-version }} | tr -d '.')

  build:
    name: Build Package
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v4

    - name: Install uv
      uses: astral-sh/setup-uv@v6
      with:
        version: "latest"

    - name: Set up Python
      run: uv python install 3.9

    - name: Install dependencies
      run: uv sync --dev

    - name: Build package
      run: uv build

    - name: Verify package
      run: |
        uv pip install dist/*.whl
        uv run covmapy --help

  # Final check job to ensure all jobs pass
  check:
    name: Check All Jobs
    if: always()
    needs: [test, lint, build]
    runs-on: ubuntu-latest
    steps:
      - name: Decide whether the needed jobs succeeded or failed
        uses: re-actors/alls-green@release/v1
        with:
          jobs: ${{ toJSON(needs) }}
